pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()



        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/jrodizc/snack_poc")

            credentials {
                /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
                username = "jrodizc"
                password = "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"
            }
        }
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()

        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/jrodizc/snack_poc")

            credentials {
                /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
                username = "jrodizc"
                password = "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"
            }
        }
    }
}
rootProject.name = "ExternalSnackPOC"
include ':app'
include ':snacklib:presentation'
include ':snacklib:core'
include ':snacklib:data'
include ':snacklib:domain'
